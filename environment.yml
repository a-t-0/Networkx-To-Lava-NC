# This file is to automatically configure your environment. It allows you to
# run the code with a single command without having to install anything
# (extra).

# First run:: conda env create --file environment.yml
# If you change this file, run: conda env update --file environment.yml

# Instructions for this networkx-to-lava-nc repository only. First time usage
# On Ubuntu (this is needed for lava-nc):
# sudo apt upgrade
# sudo apt full-upgrade
# yes | sudo apt install gcc

# Conda configuration settings. (Specify which modules/packages are installed.)
name: networkx-to-lava
channels:
  - conda-forge
  - conda
dependencies:
- python=3.8
- anaconda
- conda:
# Run python tests.
  - pytest-cov
# Generate plots.
  - matplotlib
# Run graph software quickly.
  - networkx
- pip
- pip:
# Run pip install on .tar.gz file in GitHub repository (For lava-nc only).
  - https://github.com/lava-nc/lava/releases/download/v0.3.0/lava-nc-0.3.0.tar.gz
# Turns relative import paths into absolute import paths.
  - absolufy-imports
# Auto format Python code to make it flake8 compliant.
  - autoflake
# Scan Python code for security issues.
  - bandit
# Code formatting compliance.
  - black
# Correct code misspellings.
  - codespell
# Verify percentage of code that has at least 1 test.
  - coverage
# Auto formats the Python documentation written in the code.
  - docformatter
# Auto generate docstrings.
  - flake8
# Auto sort the import statements.
  - isort
# Auto format Markdown files.
  - mdformat
# Auto check static typing.
  - mypy
# Auto generate documentation.
  - pdoc3
# Auto check programming style aspects.
  - pylint
# Auto generate docstrings.
  - pyment
# Identify and remove dead code.
  - vulture
# Include GitHub pre-commit hook.
  - pre-commit
# TODO: identify exact function(and usage).
# Seems to be an autoformatter like black, but installed using npm instead of pip.
  - prettier
# Automatically upgrades Python syntax to the new Python version syntax.
  - pyupgrade
# Another static type checker for python like mypy.
  - pyright
